// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(AppContextDB))]
    partial class AppContextDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Persistence.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ISOCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Coutries", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.IndicatorsByCountry", b =>
                {
                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("MacroindicatorId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasMaxLength(200)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("Year")
                        .HasMaxLength(50)
                        .HasColumnType("date");

                    b.HasKey("CountryId", "MacroindicatorId");

                    b.HasIndex("MacroindicatorId");

                    b.ToTable("IndicadorePorPaises", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Macroindicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("HigherIsBetter")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Weight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("Id");

                    b.ToTable("Macroindicador", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.MacroindicatorSimulation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MacroindicatorId")
                        .HasColumnType("int");

                    b.Property<int>("SimulationWeight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MacroindicatorId");

                    b.ToTable("SimulacionMacroIndicador", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.ReteOfReturn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("MaximunRete")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimunRete")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TasaRetono", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.IndicatorsByCountry", b =>
                {
                    b.HasOne("Persistence.Entities.Country", "Country")
                        .WithMany("Indicators")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Persistence.Entities.Macroindicator", "Macroindicator")
                        .WithMany("Indicators")
                        .HasForeignKey("MacroindicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Macroindicator");
                });

            modelBuilder.Entity("Persistence.Entities.MacroindicatorSimulation", b =>
                {
                    b.HasOne("Persistence.Entities.Macroindicator", "Macroindicator")
                        .WithMany("MacroindicatorSimulations")
                        .HasForeignKey("MacroindicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Macroindicator");
                });

            modelBuilder.Entity("Persistence.Entities.Country", b =>
                {
                    b.Navigation("Indicators");
                });

            modelBuilder.Entity("Persistence.Entities.Macroindicator", b =>
                {
                    b.Navigation("Indicators");

                    b.Navigation("MacroindicatorSimulations");
                });
#pragma warning restore 612, 618
        }
    }
}
